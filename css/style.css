@charset "UTF-8";
@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&display=swap');

/*定数*/
:root {
  --main-color: #111111;
  --base-color: #ffffff;
}

/*共通スタイル*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  color: #14171a;
  font-family: 'Quicksand', serif;
}

li {
  list-style-type: none;
}

a {
  text-decoration: none;
}

img {
  max-width: 100%;
}

.wrapper {
  max-width: 960px;
  margin: 0 auto;
  text-align: center;
  margin-bottom: 150px;
}

.section_title {
  display: inline-block;
  margin-bottom: 60px;
  border-bottom: 1px solid #383e45;
  font-size: 2rem;
}

.content_title {
  font-size: 1rem;
  margin: 10px 0;
}

/* note: inputのデフォルトチェックボックスは常に非表示 */
#menu-toggle {
  display: none;
}

/*ヘッダー*/
header {
  background-color: rgba(255, 255, 255, 0.5);
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 1000; /*tips: mainvisualの背面に行ってしまうので最前面に */
}

header .wrapper {
  margin-bottom: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  /* margin-right: 20px;  */
  padding: 10px 0;
}

header h1 a {
  color: #fafafa;
  background-color: #111;
  padding: 0 1rem;
}

/*ナビゲーション(ヘッダー内)*/
nav ul {
  display: flex;
  padding: 10px 0;
}

nav li {
  margin-left: 30px;
}

nav li a {
  color: #24292e;
  font-weight: 700;
}

nav li a:hover {
  opacity: 0.7;
}

/*ハンバーガーメニュー*/
.nav_btn {
  display: none;
  position: relative;
  width: 40px;
  height: 40px;
  z-index: 1;
  background: none;
  border: none;
}

.nav_btn span,
.nav_btn::before,
.nav_btn::after {
  width: 36px;
  height: 2px;
  background-color: var(--main-color);
  position: absolute;
  top: 50%;
  left: 2px;

  /*三↔✕切り替え時*/
  transition: transform 0.4s;
}

.nav_btn::before,
.nav_btn::after {
  /*NOTE:
  疑似要素はcontentを明示的に空にしないと表示されない*/
  content: '';
}

.nav_btn::before {
  transform: translateY(-11px);
}

.nav_btn::after {
  transform: translateY(11px);
}

body.is-nav-open .nav_btn span {
  transform: scaleX(0);
}
body.is-nav-open .nav_btn::before {
  transform: translateY(0) rotate(45deg);
}
body.is-nav-open .nav_btn::after {
  transform: translateY(0) rotate(-45deg);
}

/*メインビジュアル部分*/
main {
  margin-top: 60px;
}

#mainvisual {
  margin-bottom: 80px;
}

.clearfix::after {
  content: '';
  display: block;
  clear: both;
}

/*メインビジュアル スライドショー*/
/*note:
slideshow.jsでは、並べたliのdisplayのblock↔none切り替えて複数画像のfadeを実現しているため、
すべてのliの座標はabsoluteで浮かせて一箇所に揃えているようだ。
imgで定義したheight情報は親要素に伝播されず途絶えてしまうので、
親のulにimgのheightを適用して後続の要素はしっかり#mainvisualの下に来る
(この方法が正しいかはわかりません…)*/
#mainvisual ul,
#mainvisual img {
  height: 600px;
}
#mainvisual ul li {
  display: none;
  position: absolute;
  width: 100%;
}
#mainvisual ul li.now {
  display: block;
}

#mainvisual img {
  /*Tips. imgはwidthとheight指定可能な特殊なインライン要素だが、
  親要素のサイズ形成に若干影響しているのでblockにする…のかも*/
  display: block;
  width: 100%;
  /* height: 600px; */
  object-fit: cover;
}

/*About部分*/
#about .content {
  display: flex;
  justify-content: center;
  align-items: center;
}

#about img {
  width: 250px;
  height: 250px;
  border-radius: 50%;
  margin-right: 100px;
}

#about .text {
  text-align: left;
}

/*Photo部分*/
#photo ul {
  display: flex;
  justify-content: space-between;
}

#photo li {
  flex-basis: 32%; /*note: widthよりflexアイテムとして意図が明確になる*/
  box-shadow: 10px 8px 29px -6px rgba(0, 0, 0, 0.47);
}

#photo li:first-of-type {
  transform: rotate(-3deg); /* 反時計回りに少し回転 */
}

#photo li:last-of-type {
  transform: rotate(3deg); /* 時計回りに少し回転 */
}

/*フッター部分*/
footer {
  padding: 10px 0;
  text-align: center;
}
